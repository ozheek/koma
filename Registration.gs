var REGISTRATION = '–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è';

/* –ú–ï–ù–Æ */

var REGISTRATION_PHONE_BUTTON_TEXT = 'üì≤ –ù–∞–¥–∞—Ç–∏ —Å–≤—ñ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É';

var YES_REGISTER_ME = '–¢–∞–∫! –•–æ—á—É –∑–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—å üòç';
var NO_REGISTER_ME = '–ù—ñ, –Ω–µ –º–∞—é –±–∞–∂–∞–Ω–Ω—è —Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—å üòî';


/* –¢–ï–ö–°–¢–ò */

var REGISTRATION_MEMBER_ALREADY_EXISTS = '–ù–∞ –∂–∞–ª—å, –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑ —ñ–º–µ–Ω–µ–º <b>{0} –≤–∂–µ —ñ—Å–Ω—É—î</b> –≤ –±–∞–∑—ñ üòî\
\n\nC–ø—Ä–æ–±—É–π—Ç–µ —ñ–Ω—à–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç –Ω–∞–ø–∏—Å–∞–Ω–Ω—è —ñ–º–µ–Ω—ñ –∞–±–æ –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –æ—Ñ—ñ—Ü–µ—Ä—ñ–≤ –∫–ª—É–±—É.';

var REGISTRATION_USER_IS_NOT_REGISTERED = '–ù–∞–¥–∞–π—Ç–µ, –±—É–¥—å –ª–∞—Å–∫–∞, –¥–æ—Å—Ç—É–ø –¥–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω—É, —â–æ–± –∑–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—å üòä \
\n\n–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –∫–Ω–æ–ø–∫—É:\
\n\n<b>{0}</b>\
\n\n–í–æ–Ω–∞ –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –Ω–∏–∂—á–µ üëáüèºüòâ';

var REGISTRATION_SUCCESS = '<b>–í—ñ—Ç–∞—é, {0}! –í–∏ —É—Å–ø—ñ—à–Ω–æ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω—ñ –≤ —Å–∏—Å—Ç–µ–º—ñ üòç</b>\
\n\n–¶–µ –æ—Ñ—ñ—Ü—ñ–π–Ω–∏–π –±–æ—Ç –∫–ª—É–±—É "{1}". –¢–∞–∫–æ–∂, —Ü–µ –∑—Ä—É—á–Ω–∏–π —Å–ø–æ—Å—ñ–± –∑–≤\'—è–∑–∞—Ç–∏—Å—å –∑ –≤—ñ—Ü–µ-–ø—Ä–µ–∑–∏–¥–µ–Ω—Ç–æ–º –∑ –æ—Å–≤—ñ—Ç–∏, –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø—Ä–æ—Å—Ç–æ –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ —Ç–µ–∫—Å—Ç–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —Å—é–¥–∏.\
\n\n–©–æ –≤–∏ –º–æ–∂–µ—Ç–µ —Ä–æ–±–∏—Ç–∏ –≤ –±–æ—Ç—ñ:\
\n1. –ó–∞–ø–∏—Å—É–≤–∞—Ç–∏—Å—å –Ω–∞ —Ä–æ–ª—ñ\
\n2. –û—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è\
\n—Ç–∞ –±–∞–≥–∞—Ç–æ —ñ–Ω—à–æ–≥–æ...\
\n\n–Ø –ø–æ—Å—Ç—ñ–π–Ω–æ —Ä–æ–∑–≤–∏–≤–∞—é—Å—å —ñ —è–∫—â–æ, —Ä–∞–ø—Ç–æ–º, –≤–∏ –ø–æ–º—ñ—Ç–∏–ª–∏, —â–æ —â–æ—Å—å –ø—Ä–∞—Ü—é—î –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ - –æ–±–æ–≤\'—è–∑–∫–æ–≤–æ –ø–æ–≤—ñ–¥–æ–º—Ç–µ –æ—Ñ—ñ—Ü–µ—Ä–∞–º ‚ò∫';

var REGISTRATION_INVALID_NAME = "–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥i—Ç—å i–º'—è –∫–∏—Ä–∏–ª–∏—Ü–µ—é!";
var REGISTRATION_INVALID_LASTNAME = '–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥i—Ç—å –ø—Äi–∑–≤–∏—â–µ –∫–∏—Ä–∏–ª–∏—Ü–µ—é!';
var REGISTRATION_INVALID_EMAIL = '–¶–µ –Ω–µ –¥—É–∂–µ —Å—Ö–æ–∂–µ –Ω–∞ e-mail... –ü–µ—Ä–µ–≤i—Ä—Ç–µ, –±—É–¥—å –ª–∞—Å–∫–∞, —á–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–∏ –Ω–∞–ø–∏—Å–∞–ª–∏ –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É –∞–¥—Ä–µ—Å—É üòä';
var REGISTRATION_NOT_FINISHED = '–ü—Ä–∏–≤i—Ç! –í–∞—à –Ω–æ–º–µ—Ä —î —É –±–∞–∑i, –∞–ª–µ –º–∏, —Å—Ö–æ–∂–µ, –Ω–µ –ø–æ–∑–Ω–∞–π–æ–º–∏–ª–∏—Å—å —è–∫ —Å–ªi–¥ üòä';

var REGISTRATION_STEP_1 = '–í–≤–µ–¥—ñ—Ç—å –≤–∞—à–µ –ø—Ä—ñ–∑–≤–∏—â–µ:'; //3
var REGISTRATION_STEP_2 = '–Ø–∫ –≤–∞—Å –∑–≤–∞—Ç–∏ (–Ü–º\'—è)?'; //1
var REGISTRATION_STEP_3 = '–í–≤–µ–¥—ñ—Ç—å –∞–±–æ –≤–∏–±–µ—Ä—ñ—Ç—å –∫–ª–∏—á–Ω–∏–π –≤—ñ–¥–º—ñ–Ω–æ–∫ –≤–∞—à–æ–≥–æ —ñ–º–µ–Ω—ñ:'; //2
var REGISTRATION_STEP_4 = '–í–∫–∞–∂i—Ç—å, –±—É–¥—å –ª–∞—Å–∫–∞, —è–∫–æ—ó –≤–∏ —Å—Ç–∞—Çi:';

var REGISTRATION_STEP_5 = '–í–≤–µ–¥—ñ—Ç—å, –±—É–¥—å –ª–∞—Å–∫–∞, –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É –ø–æ—à—Ç—É:';

var REGISTRATION_NOT_FINISHED = '–í—ñ—Ç–∞—é, {0}! üòä\
                                              \n\n–í–∏ –ø–æ—á–∞–ª–∏ —Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—å —É –±–æ—Ç—ñ –∫–ª—É–±–∞ –æ—Ä–∞—Ç–æ—Ä—Å—å–∫–æ—ó –º–∞–π—Å—Ç–µ—Ä–Ω–æ—Å—Ç—ñ <i>"{2}"</i>.\
                                              \n\n–ü—Ä–æ—Ç–µ –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª–∏ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é, —â–æ —Ä–æ–∑–ø–æ—á–∞–ª–∏ <b>{1}</b>. –¢–æ–º—É —è –≤–∏—Ä—ñ—à–∏–≤ –Ω–∞–≥–∞–¥–∞—Ç–∏ –ø—Ä–æ —Å–µ–±–µ —ñ –ø–æ–∫–∞–∑–∞—Ç–∏, —è–∫–∏–º —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª–æ–º —è –≤–æ–ª–æ–¥—ñ—é! üòé\
                                              \n\n–•–æ—á–µ—Ç–µ –≥–ª—è–Ω—É—Ç–∏? üòç';
var REGISTRATION_NOT_FINISHED_NO_FULLNAME = '–íi—Ç–∞—é, {0}! üòä\
                                              \n\n–í–∏ –ø–æ—á–∞–ª–∏ —Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—å —É –±–æ—Ç—ñ –∫–ª—É–±–∞ –æ—Ä–∞—Ç–æ—Ä—Å—å–∫–æ—ó –º–∞–π—Å—Ç–µ—Ä–Ω–æ—Å—Ç—ñ <i>"{2}"</i>.\
                                              \n\n–ü—Ä–æ—Ç–µ –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª–∏ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é, —â–æ —Ä–æ–∑–ø–æ—á–∞–ª–∏ <b>{1}</b>.\
                                              \n\n–ë–∞–∂–∞—î—Ç–µ –ø—Ä–æ–¥–æ–≤–∂–∏—Ç–∏? üòç';

                                              
var REGISTRATION_USERDATA_HAS_BEEN_REMOVED = "–í–∞—à—ñ –¥–∞–Ω—ñ –±—É–ª–∏ —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω—ñ –∑ –±–∞–∑–∏! üòü\n\n–Ø–∫—â–æ –≤–∏ –ø–µ—Ä–µ–¥—É–º–∞—î—Ç–µ ‚Äî –º–æ–∂–µ—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é —â–µ —Ä–∞–∑ ‚ò∫\
                                              \n\n–Ø–∫ –±—É–¥–µ—Ç–µ –≥–æ—Ç–æ–≤—ñ ‚Äî –≤—ñ–¥–ø—Ä–∞–≤—Ç–µ –º–µ–Ω—ñ –±—É–¥—å-—è–∫–∏–π —Ç–µ–∫—Å—Ç –∞–±–æ –∫–æ–º–∞–Ω–¥—É /start.";
var REGISTRATION_USERDATA_HAS_BEEN_REMOVED_BEFORE = "–í–∞—ài –¥–∞–Ωi –Ω–µ –±—É–ª–æ –∑–Ω–∞–π–¥–µ–Ω–æ —É –±–∞–∑i. üòü –®–≤–∏–¥—à–µ –∑–∞ –≤—Å–µ, —ó—Ö –≤–∂–µ –≤–∏–¥–∞–ª–∏–≤ —Ö—Ç–æ—Å—å i–∑ –æ—Ñi—Ü–µ—Äi–≤.\n\n–Ø–∫—â–æ –≤–∏ –ø–µ—Ä–µ–¥—É–º–∞—î—Ç–µ ‚Äî –º–æ–∂–µ—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é —â–µ —Ä–∞–∑ ‚ò∫\
                                                  \n\n–Ø–∫ –±—É–¥–µ—Ç–µ –≥–æ—Ç–æ–≤—ñ ‚Äî –≤—ñ–¥–ø—Ä–∞–≤—Ç–µ –º–µ–Ω—ñ –±—É–¥—å-—è–∫–∏–π —Ç–µ–∫—Å—Ç –∞–±–æ –∫–æ–º–∞–Ω–¥—É /start.";

var REGISTRATION_CANCELED_BY_USER = "üìëüòå <b>–°–∫–∞—Å—É–≤–∞–Ω–Ω—è —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó</b>\n\n–©–æ–π–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —Å–∫–∞—Å—É–≤–∞–≤ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é —ñ –≤–∏–¥–∞–ª–∏–≤ —Å–≤–æ—ó –¥–∞–Ωi –∑ –±–∞–∑–∏:\n\n<b>–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á:</b> {0}\n<b>–¢–µ–ª–µ–≥—Ä–∞–º:</b> @{1}\n<b>–¢–µ–ª–µ–≥—Ä–∞–º ID:</b> {2}"
var REGISTRATION_NEW_USER = "üìëüòç <b>–ù–æ–≤–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—è</b>\n\n–©–æ–π–Ω–æ –∑–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞–≤—Å—è –Ω–æ–≤–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á:\n\n<b>–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á:</b> {0}\n<b>–¢–µ–ª–µ–≥—Ä–∞–º:</b> @{1}\n<b>–¢–µ–ª–µ–≥—Ä–∞–º ID:</b> {2}"



/* CALLBACKS */

var REGISTRATION_CONTINUE_CALLBACK = 'registration_continue_callback';
var REGISTRATION_CANCEL_CALLBACK = 'registration_cancel_callback';


function processRegistration(userData, text) {
    if (userData.statuses[1]) {
        if (userData.statuses[2]) {
            if (userData.statuses[3]) {
               if (userData.statuses[4]) {
                  if (text == EMPTY || validateEmail(text)) {
                      var emailAddress = (text == EMPTY) ? '' : text;
                      updateMemberInfo(MEMBERS_HEADER_TELEGRAM_ID, userData.telegramId, MEMBERS_HEADER_EMAIL_ADDRESS, emailAddress);
  
                      sendWelcomeMessage(userData.telegramId);
                      return false;
                  } else {
                      sendText(userData.telegramId, REGISTRATION_INVALID_EMAIL);
                      showMenu(userData.telegramId, REGISTRATION_STEP_5, [EMPTY]);
                  }
              } else {
                 updateMemberInfo(MEMBERS_HEADER_TELEGRAM_ID, userData.telegramId, MEMBERS_HEADER_SEX, text);
                 
                 showMenu(userData.telegramId, REGISTRATION_STEP_5, [EMPTY]);
                 return true;
              }
            } else {
                var callname = capitalizeFirstLetter(text);
                updateMemberInfo(MEMBERS_HEADER_TELEGRAM_ID, userData.telegramId, MEMBERS_HEADER_CALLNAME, callname);
                
                showMenu(userData.telegramId, REGISTRATION_STEP_4, [SEX_MALE, SEX_FEMALE]);
                return true;
            }
        } else {
             if (isCyrillic(text)) {
                var firstname = capitalizeFirstLetter(text);
                var lastname = capitalizeFirstLetter(userData.statuses[1]);
                var fullName = (firstname + ' ' + lastname).trim();
                var memberInfo = getMemberInfo(MEMBERS_HEADER_FULLNAME, fullName);

                if (memberInfo) {
                    var newStatus = REGISTRATION + "___";
                    var userTelegramId = userData.telegramId;

                    updateMemberInfo(MEMBERS_HEADER_TELEGRAM_ID, userTelegramId, MEMBERS_HEADER_TELEGRAM_STATUS, newStatus);

                    sendText(userTelegramId, format(REGISTRATION_MEMBER_ALREADY_EXISTS, fullName));
                    sendText(userTelegramId, REGISTRATION_STEP_1);

                    //var phoneNumber = userData.fields[MEMBERS_HEADER_MOBILE_PHONE_NUMBER];
                    //checkRegistration(userTelegramId, phoneNumber);
                } else {
                    updateMemberInfo(MEMBERS_HEADER_TELEGRAM_ID, userData.telegramId, MEMBERS_HEADER_NAME, firstname);
                    updateMemberInfo(MEMBERS_HEADER_TELEGRAM_ID, userData.telegramId, MEMBERS_HEADER_LASTNAME, lastname);
                    updateMemberInfo(MEMBERS_HEADER_TELEGRAM_ID, userData.telegramId, MEMBERS_HEADER_FULLNAME, fullName);

                    var callname = getCallName(capitalizeFirstLetter(text));
                    updateMemberInfo(MEMBERS_HEADER_TELEGRAM_ID, userData.telegramId, MEMBERS_HEADER_CALLNAME, callname);
                    showMenu(userData.telegramId, REGISTRATION_STEP_3, [callname]);
                    return true;
                }
            } else {
                showMenu(userData.telegramId, REGISTRATION_INVALID_NAME);
            }
        }
    } else {
        if (isCyrillic(text)) {
            showMenu(userData.telegramId, REGISTRATION_STEP_2);
            return true;
        } else {
            showMenu(userData.telegramId, REGISTRATION_INVALID_LASTNAME);
        }
    }
}

function checkRegistration(userTelegramId, phoneNumber, username) {
  var phoneNumberWithoutPlus = phoneNumber.toString().replace("+", "");
  var contactInfo = getMemberInfo(MEMBERS_HEADER_MOBILE_PHONE_NUMBER, phoneNumberWithoutPlus);

  if (contactInfo && contactInfo.fullName)
  {
    updateMemberInfo(MEMBERS_HEADER_MOBILE_PHONE_NUMBER, phoneNumberWithoutPlus, MEMBERS_HEADER_TELEGRAM_ID, userTelegramId);
    updateMemberInfo(MEMBERS_HEADER_MOBILE_PHONE_NUMBER, phoneNumberWithoutPlus, MEMBERS_HEADER_TELEGRAM, username);
    updateMemberInfo(MEMBERS_HEADER_MOBILE_PHONE_NUMBER, phoneNumberWithoutPlus, MEMBERS_HEADER_DATE, formatDate(new Date()));
    sendWelcomeMessage(userTelegramId);    
  }
  else 
  {
    var contactInfo = getMemberInfo(MEMBERS_HEADER_TELEGRAM_ID, userTelegramId);
    if (!contactInfo) {
        //sendMessageToOfficer(OFFICER_POSITION_PRESIDENT, '–ü—Ä–∏–≤—ñ—Ç! –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á <b>' + fullName + '</b> –∑ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º <b>' + phoneNumber + '</b> —Å–ø—Ä–æ–±—É–≤–∞–≤ –∑–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—å, –∞–ª–µ –π–æ–≥–æ <b>–Ω–µ –±—É–ª–æ –∑–Ω–∞–π–¥–µ–Ω–æ</b>.');
        var status = MEMBERS_STATUS_GUEST;
        var telegramStatus = REGISTRATION + "___";

        insertMembersData('', '', '', '', phoneNumberWithoutPlus, '', status, '', userTelegramId, username, telegramStatus);
        showMenu(userTelegramId, REGISTRATION_STEP_1);
    } else {
        if (contactInfo.fullName) {
            showMainMenu(userTelegramId);
        } else {
            var newStatus = REGISTRATION + "___";
            updateMemberInfo(MEMBERS_HEADER_TELEGRAM_ID, userTelegramId, MEMBERS_HEADER_TELEGRAM_STATUS, newStatus);
          
            sendText(userTelegramId, REGISTRATION_NOT_FINISHED);
            showMenu(userTelegramId, REGISTRATION_STEP_1);
        }
    }
  }
}

function searchUnfinishedRegistrationsAndNotifyUsers() {

  var sheet = SpreadsheetApp.openById(databaseSpreadSheetId).getSheetByName(SHEET_CONTACTS);
  var headerValues = sheet.getRange(1, 1, 1, sheet.getLastColumn()).getValues()[0];
  
  var telegramIdColumnIndex = headerValues.findIndex(MEMBERS_HEADER_TELEGRAM_ID);
  var statusesColumnIndex = headerValues.findIndex(MEMBERS_HEADER_TELEGRAM_STATUS);
  var registrationDateColumnIndex = headerValues.findIndex(MEMBERS_HEADER_DATE);
  
  var fullNameColumnIndex = headerValues.findIndex(MEMBERS_HEADER_FULLNAME);
  var callNameColumnIndex = headerValues.findIndex(MEMBERS_HEADER_CALLNAME);
  
  var values = sheet.getRange(2, 1, sheet.getLastRow(), sheet.getLastColumn()).getValues();  
  
  var delayInMiliseconds = REGISTRATION_DAYS_BEFORE_ASK * 24 * 3600 * 1000; 
  var today = new Date().setHours(0,0,0,0); 
  
  for (var i = 0; i < values.length - 1; i++) {
    var telegramId = values[i][telegramIdColumnIndex];
    var statusesString = values[i][statusesColumnIndex];
    
    if (telegramId && statusesString && statusesString.indexOf(REGISTRATION) > -1) {
      var registrationDate = parseDate(values[i][registrationDateColumnIndex]);
      
      if (today - registrationDate.getTime() >= delayInMiliseconds) {           
        var callbacks = [{data: REGISTRATION_CONTINUE_CALLBACK + '___' + telegramId, text: YES},{data: REGISTRATION_CANCEL_CALLBACK  + '___' + telegramId, text: NO}];
        
        var callName = values[i][callNameColumnIndex] || CALLNAME_GENERAL;
        var fullName = values[i][fullNameColumnIndex];
        var message = fullName ? REGISTRATION_NOT_FINISHED : REGISTRATION_NOT_FINISHED_NO_FULLNAME;
        
        sendTextWithCallbacks(telegramId, callbacks, format(message, callName, formatDate(registrationDate), CLUB_NAME));
      }
    }
  }
}

function requestPhoneNumberForRegistration(userTelegramId) {
    var keyBoard = '{\
            "one_time_keyboard": true,\
            "resize_keyboard": true,\
            "keyboard": [[{\
                "text": "' + REGISTRATION_PHONE_BUTTON_TEXT + '",\
                "request_contact": true\
            }]]\
        }';
    sendText(userTelegramId, format(REGISTRATION_USER_IS_NOT_REGISTERED, REGISTRATION_PHONE_BUTTON_TEXT), keyBoard);
}

function sendWelcomeMessage(userTelegramId) {
    var memberInfo = getMemberInfo(MEMBERS_HEADER_TELEGRAM_ID, userTelegramId);
    var callname = memberInfo.fields[MEMBERS_HEADER_CALLNAME];

    showMenu(userTelegramId, format(REGISTRATION_SUCCESS, callname, CLUB_NAME), MAIN_MENU);
  
    sendMessageToOfficer(OFFICER_POSITION_VP_MEMBERSHIP, format(REGISTRATION_NEW_USER, memberInfo.fullName, 
                                                                             memberInfo.fields[MEMBERS_HEADER_TELEGRAM], 
                                                                             memberInfo.telegramId));
}